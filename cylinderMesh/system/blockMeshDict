/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  plus                                  |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   0.5;

z 10;

vertices
(
    (-0.5 -0.5 -$z)
    ( 0.5 -0.5 -$z)
    ( 0.5  0.5 -$z)
    (-0.5  0.5 -$z)
    (-0.5 -0.5  $z)
    ( 0.5 -0.5  $z)
    ( 0.5  0.5  $z)
    (-0.5  0.5  $z)
    (-0.07071  -0.07071 -$z)
    ( 0.07071  -0.07071 -$z)
    ( 0.07071   0.07071 -$z)
    (-0.07071   0.07071 -$z)
    (-0.07071  -0.07071  $z)
    ( 0.07071  -0.07071  $z)
    ( 0.07071   0.07071  $z)
    (-0.07071   0.07071  $z)
    
);

blocks
(
    hex (0 1 9 8 4 5 13 12) (40 40 1) simpleGrading (1 1 1)
    hex (1 2 10 9 5 6 14 13) (40 40 1) simpleGrading (1 1 1)
    hex (2 3 11 10 6 7 15 14) (40 40 1) simpleGrading (1 1 1)
    hex (3 0 8 11 7 4 12 15) (40 40 1) simpleGrading (1 1 1)
);

edges
(
    arc 0 1 (0       -0.7071068 -$z)
    arc 4 5 (0       -0.7071068  $z)   
    arc 1 2 (0.7071068  0       -$z)
    arc 5 6 (0.7071068  0        $z)
    arc 2 3 (0        0.7071068 -$z)
    arc 6 7 (0        0.7071068  $z)
    arc 3 0 (-0.7071068 0       -$z)
    arc 7 4 (-0.7071068 0        $z) 

    arc 8 9   (0    -0.1   -$z)
    arc 12 13 (0    -0.1    $z)   
    arc 9 10  (0.1  0      -$z)
    arc 13 14 (0.1  0       $z)
    arc 10 11 (0     0.1   -$z)
    arc 14 15 (0     0.1    $z)
    arc 11 8  (-0.1 0      -$z)
    arc 15 12 (-0.1 0       $z)

        
);

boundary
(

    outerSides
    {
        type overset;
        faces
        (
            (1 5 6 2)
            (0 4 5 1)
            (2 6 7 3)
            (3 7 4 0)
        );
    }

    hole
    {
        type wall;
        faces
        (
            (8 9 12 13)
            (9 10 13 14)
            (10 11 14 15)
            (11 8 15 12)
        );
    }
	
    frontAndBack
    {
        type empty;
        faces
        (
            (0 1 9 8)
            (4 12 13 5)
            (1 2 10 9)
            (5 13 14 6)
            (2 3 11 10)
            (6 14 15 7)
            (3 0 8 11)
            (7 15 12 4)
        );
    }   
    
);


// ************************************************************************* //
